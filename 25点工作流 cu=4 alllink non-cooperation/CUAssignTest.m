preSucc={[],[1],[1],[1],[1],[2,4],[3,4],[2,4,5],[6,7,8],[9];
        [2,3,4,5],[6,8],[7],[6,7,8],[8],[9],[9],[9],[10],[]};
 I = [0,1339000,1383000,1336000,1378000,1037000,1059000,1088000,1755000,0];
Scu=10^5;
K=10;
D=[0,1,1,1,1,0,0,0,0,0;
   0,0,0,0,0,8334624,0,8873456,0,0;
   0,0,0,0,0,0,8517569,0,0,0;
   0,0,0,0,0,7511132,8340796,8324756,0,0;
   0,0,0,0,0,0,0,7853276,0,0;
   0,0,0,0,0,0,0,0,8326168,0;
   0,0,0,0,0,0,0,0,8861129,0;
   0,0,0,0,0,0,0,0,8315294,0;
   0,0,0,0,0,0,0,0,0,1;
   0,0,0,0,0,0,0,0,0,0];
B=10^6;
% Sslice=Scu/K;
% ET=I/Sslice;
% TT=D/B;
[ rank ] = pri(preSucc ,I,Scu,K,D,B );
%前面是求rank所必需的基本量
[ PCP ] = searchPcp( preSucc,rank);%PCP这个函数只需要两个量，函数的参数选择尽量少，量的层级尽量基础
%接着是部署CU所需要的量；
CULink=[1,1,0,0;
        1,1,1,0;
        0,1,1,1;
        0,0,1,1;];%1表示两个CU之间有链接，同一个CU也就是对角线上也都表示为1，表示连通
    
[ taskCU,CUtask,auxtask,auxpreSucc,auxD,TT ] = CUAssign( CULink,preSucc,PCP,I,Scu,K,D,B);